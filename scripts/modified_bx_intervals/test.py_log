# IPython log file
import random
from intersection_unique import *
t=IntervalTreeUnique()

def random_insert(t, d, n):
    seen = set()
    index = 0
    for i in xrange(n):
        a = random.randint(1,99)
        b = random.randint(a+1,100)
        if (a,b) not in seen:
            t.insert(a, b, index)
            seen.add((a,b))
            d[index] = (a,b)
            index += 1

def overlaps(s1, e1, s2, e2):
    return s1 <= s2 < e1 or s2 <= s1 < e2

def random_delete(t, d):
    p = []
    t.traverse(p.append)
    i = random.randint(0, len(p)-1)
    t.delete_node(p[i])
    p.pop(i)
    p2 = []
    t.traverse(p2.append)
    for a, b in zip(p, p2):
        assert a.start==b.start and a.end==b.end

    #random finds
    s = random.randint(1,99)
    e = random.randint(s+1,100)
    correct_answers = set([x.interval  for x in p2 if overlaps(x.start,x.end,s,e)])
    assert set(t.find(s, e)) == correct_answers

    return p2
